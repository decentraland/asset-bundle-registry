openapi: 3.1.0
info:
  title: Asset Bundle Registry API
  description: |
    # Asset Bundle Registry Service
    
    The Asset Bundle Registry is a proxy service that manages the availability of converted Unity Asset Bundles for Decentraland content. Acts as an intermediary between the Unity Client and the content network hosted in the Catalyst servers.
    
    ## What are Unity Asset Bundles?
    
    Unity Asset Bundles are optimized, pre-compiled packages of 3D assets used in Decentraland to improve performance in OS builds. Instead of loading raw GLTF models at runtime, scenes and wearables are converted into Asset Bundles by the Asset Bundle Converter service, which loads scene assets, re-imports GLTF models, and packages them into optimized bundles stored on a CDN.
    
    ## How the Registry Works
    
    The Asset Bundle Registry acts as an intelligent proxy between clients and the Catalyst content servers:
    
    1. **Content Upload**: When new content (scenes, wearables, etc.) is uploaded to a Catalyst server, it triggers the Asset Bundle Converter to process the assets.
    
    2. **Availability Management**: While the new content is being converted (which can take time), the registry continues to serve the **previous version** of the asset bundle for that pointer.
    
    3. **Seamless Transitions**: This ensures that when clients request a scene or wearable, there is always something to display in-world, preventing broken experiences during content updates.
    
    4. **Pointer-based Queries**: Clients query the registry by pointers (e.g., scene coordinates like "-53,71" or wearable URNs) to get the latest **available** and **ready** asset bundle, not necessarily the latest uploaded content.
    
    ## Key Features
    
    - **Always Available**: Returns the most recent successfully converted asset bundle
    - **Processing Status**: Track conversion progress of new content
    - **Multi-version Support**: Handles different Asset Bundle versions (v4, v5, etc.) based on Unity version and material changes
    - **Queue Monitoring**: Provides visibility into conversion queue status
    
    The registry works in conjunction with the Asset Bundle Converter service and the Catalyst content servers to provide a reliable, performant content delivery system for Decentraland.
  version: 1.0.0
  contact:
    name: Decentraland
    url: https://decentraland.org
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  x-api-id: asset-bundle-registry-api
servers:
  - url: https://asset-bundle-registry.decentraland.org
    description: Production server
  - url: /
    description: Local/relative path
security: []
tags:
  - name: Health
    description: Service health and monitoring endpoints
  - name: Entities
    description: Entity management and asset bundle queries
  - name: Queues
    description: Processing queue status and monitoring
paths:
  /status:
    get:
      tags:
        - Health
      summary: Get service health status
      description: |
        Returns the health status of the Asset Bundle Registry service, including connectivity to dependent services 
        (database, cache, queues) and overall system readiness.
      operationId: getStatus
      security: []
      responses:
        '200':
          description: Service health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /entities/active:
    post:
      tags:
        - Entities
      summary: Get active entities by pointers
      description: |
        Returns the currently active (ready-to-use) entities for the given pointers. This is the primary endpoint 
        for clients to query which asset bundles are available for display.
        
        **Pointers** are unique identifiers for content locations:
        - For scenes: coordinates like "-53,71" or "-100,-50"
        - For wearables: URNs like "urn:decentraland:matic:collections-v2:0x..."
        
        The response includes entities with their associated asset bundle content that are **ready for use**. 
        If new content is currently being processed for a pointer, this endpoint will return the previous 
        successfully converted version, ensuring clients always have something to render.
      operationId: getActiveEntities
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveEntitiesRequest'
      responses:
        '200':
          description: List of active entities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DbEntity'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /entities/status/{id}:
    get:
      tags:
        - Entities
      summary: Get entity status by ID
      description: |
        Returns the current processing status of a specific entity by its ID (typically a content identifier/CID).
        
        Use this endpoint to check whether an entity has been successfully converted to an asset bundle, 
        is currently being processed, or is inactive.
        
        **Status values:**
        - `active`: Entity has been successfully converted and is ready for use
        - `processing`: Entity is currently being converted by the Asset Bundle Converter
        - `inactive`: Entity conversion failed or the entity is no longer active
      operationId: getEntityStatus
      security: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Entity ID (content identifier/CID)
      responses:
        '200':
          description: Entity status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStatus'
        '404':
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /entities/status:
    get:
      tags:
        - Entities
      summary: Get multiple entities status
      description: |
        Returns the processing status of multiple entities in a single request. This endpoint requires 
        authenticated access via Decentraland's signed fetch mechanism.
        
        Useful for batch checking the conversion status of multiple pieces of content (scenes, wearables, etc.) 
        to determine which are ready for use and which are still being processed.
      operationId: getEntitiesStatus
      security:
        - SignedFetch: []
      parameters:
        - name: ids
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
          description: Comma-separated list of entity IDs (content identifiers/CIDs)
      responses:
        '200':
          description: List of entity statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityStatus'
        '401':
          description: Unauthorized - invalid signed fetch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - invalid metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /queues/status:
    get:
      tags:
        - Queues
      summary: Get queue status information
      description: |
        Returns status information about the internal processing queues that handle asset bundle conversion requests.
        
        This endpoint provides visibility into:
        - Number of entities pending conversion
        - Number of entities currently being processed
        - Number of successfully completed conversions
        - Number of failed conversions
        
        Useful for monitoring system load and identifying potential bottlenecks in the asset bundle conversion pipeline.
      operationId: getQueuesStatus
      security: []
      responses:
        '200':
          description: Queue status information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueStatus'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    SignedFetch:
      type: http
      scheme: bearer
      description: |
        Signed fetch authentication using @dcl/platform-crypto-middleware (ADR-44l). 
        Requires auth chain headers (x-identity, x-signature, x-timestamp) for signature validation. 
        See http://adr.decentraland.org/adr/ADR-44l for details.
  schemas:
    Status:
      type: object
      description: Health status response indicating the operational state of the service and its dependencies
      properties:
        status:
          type: string
          description: |
            Overall health status of the service (e.g., "ok", "healthy", "degraded"). 
            This indicates whether the service is operational and able to serve asset bundle requests.
        timestamp:
          type: string
          format: date-time
          description: ISO 8601 timestamp when the status was checked
      required:
        - status
    ActiveEntitiesRequest:
      type: object
      properties:
        pointers:
          type: array
          items:
            type: string
          description: |
            List of pointers to query for active entities. Pointers are unique identifiers for content locations:
            - Scene coordinates (e.g., "-53,71", "0,0")
            - Wearable URNs (e.g., "urn:decentraland:matic:collections-v2:0xabc...")
      required:
        - pointers
    DbEntity:
      type: object
      description: |
        Represents a Decentraland entity (scene, wearable, etc.) with its converted asset bundle information. 
        This is the primary data structure returned when querying for active entities.
      properties:
        id:
          type: string
          description: Unique entity identifier (content identifier/CID from Catalyst)
        type:
          type: string
          description: |
            Entity type indicating the kind of content:
            - `scene`: A Decentraland scene/parcel
            - `wearable`: An avatar wearable item
            - `profile`: A user profile
            - `emote`: An avatar emote/animation
        pointers:
          type: array
          items:
            type: string
          description: |
            List of pointers where this entity is active. For scenes, these are coordinates (e.g., "-53,71"). 
            For wearables, these are URNs identifying the item.
        timestamp:
          type: number
          description: Unix timestamp (milliseconds) indicating when this entity was deployed to Catalyst
        content:
          type: array
          items:
            $ref: '#/components/schemas/Content'
          description: |
            Array of content files associated with this entity, including the converted asset bundle files. 
            Each content item includes the file path and its hash for retrieval from the CDN.
        metadata:
          type: object
          additionalProperties: true
          description: |
            Entity-specific metadata (structure varies by entity type):
            - For scenes: includes display name, spawn points, parcels, etc.
            - For wearables: includes name, description, category, rarity, etc.
      required:
        - id
        - type
        - pointers
        - timestamp
    Content:
      type: object
      description: Represents a content file associated with an entity, including converted asset bundles
      properties:
        file:
          type: string
          description: |
            Relative file path of the content within the entity (e.g., "scene.json", "thumbnail.png", 
            or converted asset bundle file names)
        hash:
          type: string
          description: |
            Content identifier (CID) hash of the file, used to retrieve the actual file from the Catalyst 
            content server or Asset Bundle CDN
      required:
        - file
        - hash
    EntityStatus:
      type: object
      description: Represents the current processing and availability status of an entity's asset bundle conversion
      properties:
        id:
          type: string
          description: Unique entity identifier (content identifier/CID)
        status:
          type: string
          enum: [active, inactive, processing]
          description: |
            Current status of the entity's asset bundle:
            - `active`: Successfully converted and ready for client use
            - `processing`: Currently being converted by the Asset Bundle Converter service
            - `inactive`: Conversion failed, not yet started, or entity is no longer available
        lastUpdate:
          type: string
          format: date-time
          description: Timestamp of the last status change or conversion attempt
      required:
        - id
        - status
    QueueStatus:
      type: object
      description: Overall status of the asset bundle conversion processing queues
      properties:
        queues:
          type: array
          items:
            $ref: '#/components/schemas/Queue'
          description: Array of individual queue statuses (may include different priority queues or entity type queues)
        totalProcessed:
          type: number
          description: Total number of entities successfully processed since service startup
      required:
        - queues
    Queue:
      type: object
      description: Status information for a specific processing queue handling asset bundle conversions
      properties:
        name:
          type: string
          description: Identifier for the queue (e.g., "main", "priority", "scenes", "wearables")
        pending:
          type: number
          description: Number of entities waiting to be processed (in queue but not yet started)
        processing:
          type: number
          description: Number of entities currently being converted by the Asset Bundle Converter
        completed:
          type: number
          description: Number of entities successfully converted to asset bundles
        failed:
          type: number
          description: Number of entities that failed conversion (may be retried or require manual intervention)
      required:
        - name
        - pending
        - processing
        - completed
        - failed
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
      required:
        - error
